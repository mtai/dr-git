#!/bin/bash
# Requires "drgit-script-util" to be sourced
# Requires "drgit-git-util" to be sourced

function clone_branch() {
    # git dr clone <branch_name>
    if [[ $# -eq 0 || $# -gt 2 ]]; then
        usage_and_die "${FUNCNAME} <branch_name> [<branch_directory>]"
    fi
    __require_git_dir

    local branch_name=${1}
    local default_branch_directory=$(echo "${branch_name}" | cut -d '/' -f 2- )
    local branch_directory=$(string_or "${2}" ${default_branch_directory})

    # Copy config variables from old repo
    declare -a config_values=( )
    for config_key in "${DR_GIT_CONFIGS[@]}"; do
        config_values=("${config_values[@]}" "${config_key} $(__dr_config_or_die ${config_key})")
    done

    branch_clone_from_remote ${branch_name} $(dr_master_repo) ${branch_directory}

    cd $(git_top_level)/../${branch_directory}

    # Apply config values to new repo
    for config_key_value in "${config_values[@]}"; do
        colorize git config --local "${config_key_value}"
    done

    execute_hook_when_available post-dr-init

    execute_hook_when_available post-dr-clone-branch
}
